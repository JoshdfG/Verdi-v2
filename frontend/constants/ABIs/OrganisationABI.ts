export const OrganisationABI = [
  {
    inputs: [
      { internalType: "string", name: "_organization_name", type: "string" },
      { internalType: "address", name: "_super_admin", type: "address" },
      { internalType: "string", name: "_admin_name", type: "string" },
      { internalType: "string", name: "_uri", type: "string" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "Already_Signed_Attendance_For_Id", type: "error" },
  { inputs: [], name: "Attendance_compilation_started", type: "error" },
  { inputs: [], name: "Invalid_Campaign_Id", type: "error" },
  { inputs: [], name: "campaign_id_already_used", type: "error" },
  { inputs: [], name: "campaign_id_closed", type: "error" },
  { inputs: [], name: "not_Autorized_Caller", type: "error" },
  { inputs: [], name: "not_valid_Staff", type: "error" },
  { inputs: [], name: "not_valid_user", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "signedId",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "AttendanceSigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "campaignName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "superAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CampaignCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "CampaignStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldMentor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newMentor",
        type: "address",
      },
    ],
    name: "Handover",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "string", name: "name", type: "string" },
      {
        indexed: true,
        internalType: "address",
        name: "user_address",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "email_address",
        type: "string",
      },
    ],
    name: "UserCampaignRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "no_of_users",
        type: "uint256",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "no_of_admins",
        type: "uint256",
      },
    ],
    name: "adminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "noOfAdmins",
        type: "uint256",
      },
    ],
    name: "adminsRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "closedId",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mentor",
        type: "address",
      },
    ],
    name: "attendanceClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "lectureId",
        type: "bytes",
      },
      {
        indexed: true,
        internalType: "string",
        name: "lecture_uri",
        type: "string",
      },
      { indexed: false, internalType: "string", name: "topic", type: "string" },
      {
        indexed: true,
        internalType: "address",
        name: "staff",
        type: "address",
      },
    ],
    name: "attendanceCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "openedId",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mentor",
        type: "address",
      },
    ],
    name: "attendanceOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "no_of_staffs",
        type: "uint256",
      },
    ],
    name: "staffRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "noOfStaffs",
        type: "uint256",
      },
    ],
    name: "staffsRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "editedId",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldTopic",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newTopic",
        type: "string",
      },
    ],
    name: "topicEditted",
    type: "event",
  },
  {
    inputs: [],
    name: "NftContract",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newModerator", type: "address" },
    ],
    name: "TransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_staff", type: "address" }],
    name: "VerifyAdmin",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_staff", type: "address" }],
    name: "VerifyStaff",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "VerifyUser",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "campaignAttendees",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "campaigns",
    outputs: [
      { internalType: "string", name: "campaign_name", type: "string" },
      { internalType: "string", name: "campaign_uri", type: "string" },
      { internalType: "string", name: "campaign_location", type: "string" },
      { internalType: "string", name: "campaign_description", type: "string" },
      { internalType: "address", name: "owner", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "certificateContract",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "certificateIssued",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "certiificateURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes", name: "_lectureId", type: "bytes" }],
    name: "closeAttendance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes", name: "_lectureId", type: "bytes" },
      { internalType: "string", name: "_uri", type: "string" },
      { internalType: "string", name: "_topic", type: "string" },
    ],
    name: "createAttendance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "_campaign_name", type: "string" },
      { internalType: "string", name: "_uri", type: "string" },
      { internalType: "address", name: "_super_admin", type: "address" },
      { internalType: "string", name: "_location", type: "string" },
      { internalType: "string", name: "_description", type: "string" },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes", name: "_lectureId", type: "bytes" },
      { internalType: "string", name: "_topic", type: "string" },
    ],
    name: "editTopic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes", name: "_lectureId", type: "bytes" }],
    name: "getCampaignAttendance",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes", name: "_lectureId", type: "bytes" }],
    name: "getCampaignData",
    outputs: [
      {
        components: [
          { internalType: "address", name: "mentorOnDuty", type: "address" },
          { internalType: "string", name: "topic", type: "string" },
          { internalType: "string", name: "uri", type: "string" },
          {
            internalType: "uint256",
            name: "attendanceStartTime",
            type: "uint256",
          },
          { internalType: "uint256", name: "usersPresent", type: "uint256" },
          { internalType: "bool", name: "status", type: "bool" },
        ],
        internalType: "struct organisation.lectureData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCampaignIds",
    outputs: [{ internalType: "bytes[]", name: "", type: "bytes[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCampaignStatus",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCampaigns",
    outputs: [
      {
        components: [
          { internalType: "string", name: "campaign_name", type: "string" },
          { internalType: "string", name: "campaign_uri", type: "string" },
          { internalType: "string", name: "campaign_location", type: "string" },
          {
            internalType: "string",
            name: "campaign_description",
            type: "string",
          },
          { internalType: "address", name: "owner", type: "address" },
        ],
        internalType: "struct Campaign[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getModerator",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address[]", name: "_users", type: "address[]" }],
    name: "getNameArray",
    outputs: [{ internalType: "string[]", name: "", type: "string[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrganisationImageUri",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrganizationName",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrganizationStatus",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_staff", type: "address" }],
    name: "getStaffsName",
    outputs: [{ internalType: "string", name: "name", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "getUserAttendanceRatio",
    outputs: [
      { internalType: "uint256", name: "attendance", type: "uint256" },
      { internalType: "uint256", name: "TotalCampaign", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserCampaignReg",
    outputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "address", name: "user_address", type: "address" },
          { internalType: "string", name: "email_address", type: "string" },
        ],
        internalType: "struct organisation.Reg[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "getUserName",
    outputs: [{ internalType: "string", name: "name", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes", name: "_lectureId", type: "bytes" }],
    name: "getUsersPresent",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_NftContract", type: "address" },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isCampaignOn",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOngoing",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_student", type: "address" }],
    name: "listCampaignAttended",
    outputs: [{ internalType: "bytes[]", name: "", type: "bytes[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listStaffs",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listUsers",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liststaffs",
    outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "_address", type: "address" },
          { internalType: "string", name: "_name", type: "string" },
          { internalType: "string", name: "email", type: "string" },
        ],
        internalType: "struct individual[]",
        name: "_admin",
        type: "tuple[]",
      },
    ],
    name: "makeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes", name: "_lectureId", type: "bytes" }],
    name: "openAttendance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "organisationImageUri",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "_address", type: "address" },
          { internalType: "string", name: "_name", type: "string" },
          { internalType: "string", name: "email", type: "string" },
        ],
        internalType: "struct individual[]",
        name: "_staff",
        type: "tuple[]",
      },
    ],
    name: "registerStaffs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "_address", type: "address" },
          { internalType: "string", name: "_name", type: "string" },
          { internalType: "string", name: "email", type: "string" },
        ],
        internalType: "struct individual[]",
        name: "_users",
        type: "tuple[]",
      },
    ],
    name: "registerUsers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "registered_users_data",
    outputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "address", name: "user_address", type: "address" },
      { internalType: "string", name: "email_address", type: "string" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "rouge_admins", type: "address[]" },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "_rouge_staffs", type: "address[]" },
    ],
    name: "removeStaff",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes", name: "_lectureId", type: "bytes" }],
    name: "signAttendance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokContract",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spokMinted",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spokURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newMentor", type: "address" }],
    name: "staffHandover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleCampaignStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleOrganizationStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "address", name: "user_address", type: "address" },
          { internalType: "string", name: "email_address", type: "string" },
        ],
        internalType: "struct organisation.Reg",
        name: "_user",
        type: "tuple",
      },
    ],
    name: "userCampaignReg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
